diff --git a/design/dbg/dbg.sv b/design/dbg/dbg.sv
index 5a4651f..fa5e9d9 100644
--- a/design/dbg/dbg.sv
+++ b/design/dbg/dbg.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/dec/dec.sv b/design/dec/dec.sv
index c415f9e..f9ce754 100644
--- a/design/dec/dec.sv
+++ b/design/dec/dec.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/dec/dec_decode_ctl.sv b/design/dec/dec_decode_ctl.sv
index 02c0b05..07e2290 100644
--- a/design/dec/dec_decode_ctl.sv
+++ b/design/dec/dec_decode_ctl.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/dec/dec_gpr_ctl.sv b/design/dec/dec_gpr_ctl.sv
index 5110c1b..1543829 100644
--- a/design/dec/dec_gpr_ctl.sv
+++ b/design/dec/dec_gpr_ctl.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/dec/dec_ib_ctl.sv b/design/dec/dec_ib_ctl.sv
index 84780a0..db22a76 100644
--- a/design/dec/dec_ib_ctl.sv
+++ b/design/dec/dec_ib_ctl.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/dec/dec_tlu_ctl.sv b/design/dec/dec_tlu_ctl.sv
index 52a4393..9698d20 100644
--- a/design/dec/dec_tlu_ctl.sv
+++ b/design/dec/dec_tlu_ctl.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/dec/dec_trigger.sv b/design/dec/dec_trigger.sv
index 7ecb7d3..46ee25c 100644
--- a/design/dec/dec_trigger.sv
+++ b/design/dec/dec_trigger.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/dma_ctrl.sv b/design/dma_ctrl.sv
index 98f1ed5..8527db6 100644
--- a/design/dma_ctrl.sv
+++ b/design/dma_ctrl.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/dmi/rvjtag_tap.sv b/design/dmi/rvjtag_tap.sv
index 2553575..8cab57a 100644
--- a/design/dmi/rvjtag_tap.sv
+++ b/design/dmi/rvjtag_tap.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or it's affiliates.
 //
diff --git a/design/exu/exu.sv b/design/exu/exu.sv
index 08b5dc3..bf282fb 100644
--- a/design/exu/exu.sv
+++ b/design/exu/exu.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/exu/exu_alu_ctl.sv b/design/exu/exu_alu_ctl.sv
index ee3ba4e..5518126 100644
--- a/design/exu/exu_alu_ctl.sv
+++ b/design/exu/exu_alu_ctl.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/exu/exu_div_ctl.sv b/design/exu/exu_div_ctl.sv
index 1ae951b..b5d752b 100644
--- a/design/exu/exu_div_ctl.sv
+++ b/design/exu/exu_div_ctl.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/exu/exu_mul_ctl.sv b/design/exu/exu_mul_ctl.sv
index 41a86e8..c6dbd0a 100644
--- a/design/exu/exu_mul_ctl.sv
+++ b/design/exu/exu_mul_ctl.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/ifu/ifu.sv b/design/ifu/ifu.sv
index b55c1f0..75e936f 100644
--- a/design/ifu/ifu.sv
+++ b/design/ifu/ifu.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 //********************************************************************************
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
diff --git a/design/ifu/ifu_aln_ctl.sv b/design/ifu/ifu_aln_ctl.sv
index 76d5e55..4e97d18 100644
--- a/design/ifu/ifu_aln_ctl.sv
+++ b/design/ifu/ifu_aln_ctl.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 //********************************************************************************
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
diff --git a/design/ifu/ifu_bp_ctl.sv b/design/ifu/ifu_bp_ctl.sv
index 215b369..80f75c6 100644
--- a/design/ifu/ifu_bp_ctl.sv
+++ b/design/ifu/ifu_bp_ctl.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 //********************************************************************************
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
diff --git a/design/ifu/ifu_compress_ctl.sv b/design/ifu/ifu_compress_ctl.sv
index 43b68fc..9b710bf 100644
--- a/design/ifu/ifu_compress_ctl.sv
+++ b/design/ifu/ifu_compress_ctl.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 //********************************************************************************
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
diff --git a/design/ifu/ifu_ic_mem.sv b/design/ifu/ifu_ic_mem.sv
index dded8fd..a90af95 100644
--- a/design/ifu/ifu_ic_mem.sv
+++ b/design/ifu/ifu_ic_mem.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 //********************************************************************************
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or it's affiliates.
diff --git a/design/ifu/ifu_iccm_mem.sv b/design/ifu/ifu_iccm_mem.sv
index b636be1..7725940 100644
--- a/design/ifu/ifu_iccm_mem.sv
+++ b/design/ifu/ifu_iccm_mem.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 //********************************************************************************
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
diff --git a/design/ifu/ifu_ifc_ctl.sv b/design/ifu/ifu_ifc_ctl.sv
index e382e68..74fb721 100644
--- a/design/ifu/ifu_ifc_ctl.sv
+++ b/design/ifu/ifu_ifc_ctl.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/ifu/ifu_mem_ctl.sv b/design/ifu/ifu_mem_ctl.sv
index 55acd10..9ad6596 100644
--- a/design/ifu/ifu_mem_ctl.sv
+++ b/design/ifu/ifu_mem_ctl.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 //********************************************************************************
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
diff --git a/design/include/veer_types.sv b/design/include/veer_types.sv
index f66be3f..1f52192 100644
--- a/design/include/veer_types.sv
+++ b/design/include/veer_types.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/lib/ahb_to_axi4.sv b/design/lib/ahb_to_axi4.sv
index 3a87b39..2b3b491 100644
--- a/design/lib/ahb_to_axi4.sv
+++ b/design/lib/ahb_to_axi4.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/lib/axi4_to_ahb.sv b/design/lib/axi4_to_ahb.sv
index 776e8d6..2f10498 100644
--- a/design/lib/axi4_to_ahb.sv
+++ b/design/lib/axi4_to_ahb.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/lib/beh_lib.sv b/design/lib/beh_lib.sv
index 31567d6..fd4691d 100644
--- a/design/lib/beh_lib.sv
+++ b/design/lib/beh_lib.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/lib/mem_lib.sv b/design/lib/mem_lib.sv
index 9582c8d..9d0121a 100644
--- a/design/lib/mem_lib.sv
+++ b/design/lib/mem_lib.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/lib/svci_to_axi4.sv b/design/lib/svci_to_axi4.sv
index 20c6a8e..93c9a5c 100644
--- a/design/lib/svci_to_axi4.sv
+++ b/design/lib/svci_to_axi4.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2018 Western Digital Corporation or it's affiliates.
 //
diff --git a/design/lsu/lsu.sv b/design/lsu/lsu.sv
index 20c7ef9..288c253 100644
--- a/design/lsu/lsu.sv
+++ b/design/lsu/lsu.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/lsu/lsu_addrcheck.sv b/design/lsu/lsu_addrcheck.sv
index 030b33e..8d846b7 100644
--- a/design/lsu/lsu_addrcheck.sv
+++ b/design/lsu/lsu_addrcheck.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/lsu/lsu_bus_buffer.sv b/design/lsu/lsu_bus_buffer.sv
index 7a0e807..54d229e 100644
--- a/design/lsu/lsu_bus_buffer.sv
+++ b/design/lsu/lsu_bus_buffer.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/lsu/lsu_bus_intf.sv b/design/lsu/lsu_bus_intf.sv
index bde813c..729bc43 100644
--- a/design/lsu/lsu_bus_intf.sv
+++ b/design/lsu/lsu_bus_intf.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/lsu/lsu_clkdomain.sv b/design/lsu/lsu_clkdomain.sv
index 14bef2e..b8f99e2 100644
--- a/design/lsu/lsu_clkdomain.sv
+++ b/design/lsu/lsu_clkdomain.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/lsu/lsu_dccm_ctl.sv b/design/lsu/lsu_dccm_ctl.sv
index 303a6fe..0dc1b65 100644
--- a/design/lsu/lsu_dccm_ctl.sv
+++ b/design/lsu/lsu_dccm_ctl.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/lsu/lsu_dccm_mem.sv b/design/lsu/lsu_dccm_mem.sv
index ed376ee..64dc183 100644
--- a/design/lsu/lsu_dccm_mem.sv
+++ b/design/lsu/lsu_dccm_mem.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/lsu/lsu_ecc.sv b/design/lsu/lsu_ecc.sv
index 508c770..23fac72 100644
--- a/design/lsu/lsu_ecc.sv
+++ b/design/lsu/lsu_ecc.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/lsu/lsu_lsc_ctl.sv b/design/lsu/lsu_lsc_ctl.sv
index 4891a1a..da6aeb6 100644
--- a/design/lsu/lsu_lsc_ctl.sv
+++ b/design/lsu/lsu_lsc_ctl.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/lsu/lsu_stbuf.sv b/design/lsu/lsu_stbuf.sv
index dea32c4..90eba7d 100644
--- a/design/lsu/lsu_stbuf.sv
+++ b/design/lsu/lsu_stbuf.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/lsu/lsu_trigger.sv b/design/lsu/lsu_trigger.sv
index 67eb7de..63f6fe3 100644
--- a/design/lsu/lsu_trigger.sv
+++ b/design/lsu/lsu_trigger.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/mem.sv b/design/mem.sv
index 5cc4808..457cfe2 100644
--- a/design/mem.sv
+++ b/design/mem.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 //********************************************************************************
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
diff --git a/design/pic_ctrl.sv b/design/pic_ctrl.sv
index 204da31..5a72d4d 100644
--- a/design/pic_ctrl.sv
+++ b/design/pic_ctrl.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 //********************************************************************************
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
diff --git a/design/veer.sv b/design/veer.sv
index 4d0bcd2..4bfb66c 100644
--- a/design/veer.sv
+++ b/design/veer.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
diff --git a/design/veer_wrapper.sv b/design/veer_wrapper.sv
index ed9097e..4500c60 100644
--- a/design/veer_wrapper.sv
+++ b/design/veer_wrapper.sv
@@ -1,3 +1,4 @@
+`include "common_defines.vh"
 // SPDX-License-Identifier: Apache-2.0
 // Copyright 2019 Western Digital Corporation or its affiliates.
 //
@@ -305,11 +306,20 @@ module veer_wrapper
    output logic [1:0] dec_tlu_perfcnt3,
 
    // ports added by the soc team
+`ifdef USE_JTAG
    input logic                       jtag_tck, // JTAG clk
    input logic                       jtag_tms, // JTAG TMS
    input logic                       jtag_tdi, // JTAG tdi
    input logic                       jtag_trst_n, // JTAG Reset
    output logic                      jtag_tdo, // JTAG TDO
+`else
+   input logic                       dmi_reg_en,    // read or write
+   input logic [6:0]                 dmi_reg_addr,  // address of DM register
+   input logic                       dmi_reg_wr_en, // write instruction
+   input logic [31:0]                dmi_reg_wdata, // write data
+   output logic [31:0]               dmi_reg_rdata, // outputs from the dbg back to jtag
+   input  logic                      dmi_hard_reset,
+`endif
    // external MPC halt/run interface
    input logic mpc_debug_halt_req, // Async halt request
    input logic mpc_debug_run_req, // Async run request
@@ -394,12 +404,14 @@ module veer_wrapper
    logic        icm_clk_override;
    logic        dec_tlu_core_ecc_disable;
 
+`ifdef USE_JTAG
    logic        dmi_reg_en;
    logic [6:0]  dmi_reg_addr;
    logic        dmi_reg_wr_en;
    logic [31:0] dmi_reg_wdata;
    logic [31:0] dmi_reg_rdata;
    logic        dmi_hard_reset;
+`endif
 
 
    // Instantiate the veer core
@@ -413,6 +425,7 @@ module veer_wrapper
         .*
         );
 
+`ifdef USE_JTAG
   // Instantiate the JTAG/DMI
    dmi_wrapper  dmi_wrapper (
            // JTAG signals
@@ -434,6 +447,7 @@ module veer_wrapper
            .reg_wr_en   (dmi_reg_wr_en),   // 1 bit  Write enable to Processor
            .dmi_hard_reset   (dmi_hard_reset)   //a hard reset of the DTM, causing the DTM to forget about any outstanding DMI transactions
    );
+`endif
 
 endmodule
 
diff --git a/design/veer_wrapper_verilog.v b/design/veer_wrapper_verilog.v
new file mode 100644
index 0000000..b21f6ca
--- /dev/null
+++ b/design/veer_wrapper_verilog.v
@@ -0,0 +1,510 @@
+// Verilog wrapper for veer
+// 
+// Copyright 2022 Carsten Heinz
+// 
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+// 
+// http://www.apache.org/licenses/LICENSE-2.0
+// 
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+`include "common_defines.vh"
+
+module veer_wrapper_verilog (
+	input wire clk,
+	input wire rst_n,
+	input wire timer_int,
+
+`ifdef RV_BUILD_AXI4
+	//-------------------------- LSU AXI signals--------------------------
+	// AXI Write Channels
+	output wire                            lsu_axi_awvalid,
+	input  wire                            lsu_axi_awready,
+	output wire [`RV_LSU_BUS_TAG-1:0]      lsu_axi_awid,
+	output wire [31:0]                     lsu_axi_awaddr,
+	output wire [3:0]                      lsu_axi_awregion,
+	output wire [7:0]                      lsu_axi_awlen,
+	output wire [2:0]                      lsu_axi_awsize,
+	output wire [1:0]                      lsu_axi_awburst,
+	output wire                            lsu_axi_awlock,
+	output wire [3:0]                      lsu_axi_awcache,
+	output wire [2:0]                      lsu_axi_awprot,
+	output wire [3:0]                      lsu_axi_awqos,
+
+	output wire                            lsu_axi_wvalid,
+	input  wire                            lsu_axi_wready,
+	output wire [63:0]                     lsu_axi_wdata,
+	output wire [7:0]                      lsu_axi_wstrb,
+	output wire                            lsu_axi_wlast,
+
+	input  wire                            lsu_axi_bvalid,
+	output wire                            lsu_axi_bready,
+	input  wire [1:0]                      lsu_axi_bresp,
+	input  wire [`RV_LSU_BUS_TAG-1:0]      lsu_axi_bid,
+
+	// AXI Read Channels
+	output wire                            lsu_axi_arvalid,
+	input  wire                            lsu_axi_arready,
+	output wire [`RV_LSU_BUS_TAG-1:0]      lsu_axi_arid,
+	output wire [31:0]                     lsu_axi_araddr,
+	output wire [3:0]                      lsu_axi_arregion,
+	output wire [7:0]                      lsu_axi_arlen,
+	output wire [2:0]                      lsu_axi_arsize,
+	output wire [1:0]                      lsu_axi_arburst,
+	output wire                            lsu_axi_arlock,
+	output wire [3:0]                      lsu_axi_arcache,
+	output wire [2:0]                      lsu_axi_arprot,
+	output wire [3:0]                      lsu_axi_arqos,
+
+	input  wire                            lsu_axi_rvalid,
+	output wire                            lsu_axi_rready,
+	input  wire [`RV_LSU_BUS_TAG-1:0]      lsu_axi_rid,
+	input  wire [63:0]                     lsu_axi_rdata,
+	input  wire [1:0]                      lsu_axi_rresp,
+	input  wire                            lsu_axi_rlast,
+
+	//-------------------------- IFU AXI signals--------------------------
+	// AXI Write Channels
+	output wire                            ifu_axi_awvalid,
+	input  wire                            ifu_axi_awready,
+	output wire [`RV_IFU_BUS_TAG-1:0]      ifu_axi_awid,
+	output wire [31:0]                     ifu_axi_awaddr,
+	output wire [3:0]                      ifu_axi_awregion,
+	output wire [7:0]                      ifu_axi_awlen,
+	output wire [2:0]                      ifu_axi_awsize,
+	output wire [1:0]                      ifu_axi_awburst,
+	output wire                            ifu_axi_awlock,
+	output wire [3:0]                      ifu_axi_awcache,
+	output wire [2:0]                      ifu_axi_awprot,
+	output wire [3:0]                      ifu_axi_awqos,
+
+	output wire                            ifu_axi_wvalid,
+	input  wire                            ifu_axi_wready,
+	output wire [63:0]                     ifu_axi_wdata,
+	output wire [7:0]                      ifu_axi_wstrb,
+	output wire                            ifu_axi_wlast,
+
+	input  wire                            ifu_axi_bvalid,
+	output wire                            ifu_axi_bready,
+	input  wire [1:0]                      ifu_axi_bresp,
+	input  wire [`RV_IFU_BUS_TAG-1:0]      ifu_axi_bid,
+
+	// AXI Read Channels
+	output wire                            ifu_axi_arvalid,
+	input  wire                            ifu_axi_arready,
+	output wire [`RV_IFU_BUS_TAG-1:0]      ifu_axi_arid,
+	output wire [31:0]                     ifu_axi_araddr,
+	output wire [3:0]                      ifu_axi_arregion,
+	output wire [7:0]                      ifu_axi_arlen,
+	output wire [2:0]                      ifu_axi_arsize,
+	output wire [1:0]                      ifu_axi_arburst,
+	output wire                            ifu_axi_arlock,
+	output wire [3:0]                      ifu_axi_arcache,
+	output wire [2:0]                      ifu_axi_arprot,
+	output wire [3:0]                      ifu_axi_arqos,
+
+	input  wire                            ifu_axi_rvalid,
+	output wire                            ifu_axi_rready,
+	input  wire [`RV_IFU_BUS_TAG-1:0]      ifu_axi_rid,
+	input  wire [63:0]                     ifu_axi_rdata,
+	input  wire [1:0]                      ifu_axi_rresp,
+	input  wire                            ifu_axi_rlast,
+
+	//-------------------------- SB AXI signals--------------------------
+	// AXI Write Channels
+	output wire                            sb_axi_awvalid,
+	input  wire                            sb_axi_awready,
+	output wire [`RV_SB_BUS_TAG-1:0]       sb_axi_awid,
+	output wire [31:0]                     sb_axi_awaddr,
+	output wire [3:0]                      sb_axi_awregion,
+	output wire [7:0]                      sb_axi_awlen,
+	output wire [2:0]                      sb_axi_awsize,
+	output wire [1:0]                      sb_axi_awburst,
+	output wire                            sb_axi_awlock,
+	output wire [3:0]                      sb_axi_awcache,
+	output wire [2:0]                      sb_axi_awprot,
+	output wire [3:0]                      sb_axi_awqos,
+
+	output wire                            sb_axi_wvalid,
+	input  wire                            sb_axi_wready,
+	output wire [63:0]                     sb_axi_wdata,
+	output wire [7:0]                      sb_axi_wstrb,
+	output wire                            sb_axi_wlast,
+
+	input  wire                            sb_axi_bvalid,
+	output wire                            sb_axi_bready,
+	input  wire [1:0]                      sb_axi_bresp,
+	input  wire [`RV_SB_BUS_TAG-1:0]       sb_axi_bid,
+
+	// AXI Read Channels
+	output wire                            sb_axi_arvalid,
+	input  wire                            sb_axi_arready,
+	output wire [`RV_SB_BUS_TAG-1:0]       sb_axi_arid,
+	output wire [31:0]                     sb_axi_araddr,
+	output wire [3:0]                      sb_axi_arregion,
+	output wire [7:0]                      sb_axi_arlen,
+	output wire [2:0]                      sb_axi_arsize,
+	output wire [1:0]                      sb_axi_arburst,
+	output wire                            sb_axi_arlock,
+	output wire [3:0]                      sb_axi_arcache,
+	output wire [2:0]                      sb_axi_arprot,
+	output wire [3:0]                      sb_axi_arqos,
+
+	input  wire                            sb_axi_rvalid,
+	output wire                            sb_axi_rready,
+	input  wire [`RV_SB_BUS_TAG-1:0]       sb_axi_rid,
+	input  wire [63:0]                     sb_axi_rdata,
+	input  wire [1:0]                      sb_axi_rresp,
+	input  wire                            sb_axi_rlast,
+
+	//-------------------------- DMA AXI signals--------------------------
+	// Slave port
+	// AXI Write Channels
+	input  wire                         dma_axi_awvalid,
+	output wire                         dma_axi_awready,
+	input  wire [`RV_DMA_BUS_TAG-1:0]   dma_axi_awid,
+	input  wire [31:0]                  dma_axi_awaddr,
+	input  wire [2:0]                   dma_axi_awsize,
+	input  wire [2:0]                   dma_axi_awprot,
+	input  wire [7:0]                   dma_axi_awlen,
+	input  wire [1:0]                   dma_axi_awburst,
+
+	input  wire                         dma_axi_wvalid,
+	output wire                         dma_axi_wready,
+	input  wire [63:0]                  dma_axi_wdata,
+	input  wire [7:0]                   dma_axi_wstrb,
+	input  wire                         dma_axi_wlast,
+
+	output wire                         dma_axi_bvalid,
+	input  wire                         dma_axi_bready,
+	output wire [1:0]                   dma_axi_bresp,
+	output wire [`RV_DMA_BUS_TAG-1:0]   dma_axi_bid,
+
+	// AXI Read Channels
+	input  wire                         dma_axi_arvalid,
+	output wire                         dma_axi_arready,
+	input  wire [`RV_DMA_BUS_TAG-1:0]   dma_axi_arid,
+	input  wire [31:0]                  dma_axi_araddr,
+	input  wire [2:0]                   dma_axi_arsize,
+	input  wire [2:0]                   dma_axi_arprot,
+	input  wire [7:0]                   dma_axi_arlen,
+	input  wire [1:0]                   dma_axi_arburst,
+
+	output wire                         dma_axi_rvalid,
+	input  wire                         dma_axi_rready,
+	output wire [`RV_DMA_BUS_TAG-1:0]   dma_axi_rid,
+	output wire [63:0]                  dma_axi_rdata,
+	output wire [1:0]                   dma_axi_rresp,
+	output wire                         dma_axi_rlast,
+`endif
+`ifdef RV_BUILD_AHB_LITE
+	// AHB bus not available in verilog wrapper yet
+`endif
+
+`ifdef USE_JTAG
+	input wire jtag_tck, // JTAG clk
+	input wire jtag_tms, // JTAG TMS
+	input wire jtag_tdi, // JTAG tdi
+	input wire jtag_trst_n, // JTAG Reset
+	output wire jtag_tdo // JTAG TDO
+`else
+	input wire                          dmi_reg_en,    // read or write
+	input wire [6:0]                    dmi_reg_addr,  // address of DM register
+	input wire                          dmi_reg_wr_en, // write instruction
+	input wire [31:0]                   dmi_reg_wdata, // write data
+	output wire [31:0]                  dmi_reg_rdata // outputs from the dbg back to jtag
+`endif
+);
+
+wire [31:0] rv_reset_vec_w = `RV_RESET_VEC;
+wire [31:1] rst_vec  = rv_reset_vec_w[31:1];//31'h0;
+wire        nmi_int = 1'b0;
+wire [31:0] rv_nmi_vec_w = `RV_NMI_VEC;
+wire [31:1] nmi_vec = rv_nmi_vec_w[31:1];//31'h0;
+
+wire [63:0] trace_rv_i_insn_ip;
+wire [63:0] trace_rv_i_address_ip;
+wire [2:0]  trace_rv_i_valid_ip;
+wire [2:0]  trace_rv_i_exception_ip;
+wire [4:0]  trace_rv_i_ecause_ip;
+wire [2:0]  trace_rv_i_interrupt_ip;
+wire [31:0] trace_rv_i_tval_ip;
+
+// clk ratio signals
+wire lsu_bus_clk_en = 1'b1; // Clock ratio b/w cpu core clk & AHB master interface
+wire ifu_bus_clk_en = 1'b1; // Clock ratio b/w cpu core clk & AHB master interface
+wire dbg_bus_clk_en = 1'b1; // Clock ratio b/w cpu core clk & AHB master interface
+wire dma_bus_clk_en = 1'b1; // Clock ratio b/w cpu core clk & AHB slave interface
+
+wire [`RV_PIC_TOTAL_INT:1] extintsrc_req = 0;
+
+wire dec_tlu_perfcnt0; // toggles when slot0 perf counter 0 has an event inc
+wire dec_tlu_perfcnt1;
+wire dec_tlu_perfcnt2;
+wire dec_tlu_perfcnt3;
+
+wire i_cpu_halt_req = 1'b0; // Async halt req to CPU
+wire o_cpu_halt_ack; // core response to halt
+wire o_cpu_halt_status; // 1'b1 indicates core is halted
+wire o_debug_mode_status; // Core to the PMU that core is in debug mode. When core is in debug mode; the PMU should refrain from sendng a halt or run request
+wire i_cpu_run_req = 1'b0; // Async restart req to CPU
+wire o_cpu_run_ack; // Core response to run req
+wire scan_mode = 1'b0; // To enable scan mode
+wire mbist_mode = 1'b0; // to enable mbist
+
+veer_wrapper veer_wrapper_inst
+(
+	.clk(clk),
+	.rst_l(rst_n),
+	.dbg_rst_l(rst_n),
+	.rst_vec(rst_vec),
+	.nmi_int(nmi_int),
+	.nmi_vec(nmi_vec),
+	.jtag_id(0),
+
+	.trace_rv_i_insn_ip(trace_rv_i_insn_ip),
+	.trace_rv_i_address_ip(trace_rv_i_address_ip),
+	.trace_rv_i_valid_ip(trace_rv_i_valid_ip),
+	.trace_rv_i_exception_ip(trace_rv_i_exception_ip),
+	.trace_rv_i_ecause_ip(trace_rv_i_ecause_ip),
+	.trace_rv_i_interrupt_ip(trace_rv_i_interrupt_ip),
+	.trace_rv_i_tval_ip(trace_rv_i_tval_ip),
+
+
+`ifdef RV_BUILD_AXI4
+	//LSU
+	.lsu_axi_awvalid(lsu_axi_awvalid),
+	.lsu_axi_awready(lsu_axi_awready),
+	.lsu_axi_awid(lsu_axi_awid),
+	.lsu_axi_awaddr(lsu_axi_awaddr),
+	.lsu_axi_awregion(lsu_axi_awregion),
+	.lsu_axi_awlen(lsu_axi_awlen),
+	.lsu_axi_awsize(lsu_axi_awsize),
+	.lsu_axi_awburst(lsu_axi_awburst),
+	.lsu_axi_awlock(lsu_axi_awlock),
+	.lsu_axi_awcache(lsu_axi_awcache),
+	.lsu_axi_awprot(lsu_axi_awprot),
+	.lsu_axi_awqos(lsu_axi_awqos),
+
+	.lsu_axi_wvalid(lsu_axi_wvalid),
+	.lsu_axi_wready(lsu_axi_wready),
+	.lsu_axi_wdata(lsu_axi_wdata),
+	.lsu_axi_wstrb(lsu_axi_wstrb),
+	.lsu_axi_wlast(lsu_axi_wlast),
+
+	.lsu_axi_bvalid(lsu_axi_bvalid),
+	.lsu_axi_bready(lsu_axi_bready),
+	.lsu_axi_bresp(lsu_axi_bresp),
+	.lsu_axi_bid(lsu_axi_bid),
+
+
+	.lsu_axi_arvalid(lsu_axi_arvalid),
+	.lsu_axi_arready(lsu_axi_arready),
+	.lsu_axi_arid(lsu_axi_arid),
+	.lsu_axi_araddr(lsu_axi_araddr),
+	.lsu_axi_arregion(lsu_axi_arregion),
+	.lsu_axi_arlen(lsu_axi_arlen),
+	.lsu_axi_arsize(lsu_axi_arsize),
+	.lsu_axi_arburst(lsu_axi_arburst),
+	.lsu_axi_arlock(lsu_axi_arlock),
+	.lsu_axi_arcache(lsu_axi_arcache),
+	.lsu_axi_arprot(lsu_axi_arprot),
+	.lsu_axi_arqos(lsu_axi_arqos),
+
+	.lsu_axi_rvalid(lsu_axi_rvalid),
+	.lsu_axi_rready(lsu_axi_rready),
+	.lsu_axi_rid(lsu_axi_rid),
+	.lsu_axi_rdata(lsu_axi_rdata),
+	.lsu_axi_rresp(lsu_axi_rresp),
+	.lsu_axi_rlast(lsu_axi_rlast),
+
+
+	//IFU
+	.ifu_axi_awvalid(ifu_axi_awvalid),
+	.ifu_axi_awready(ifu_axi_awready),
+	.ifu_axi_awid(ifu_axi_awid),
+	.ifu_axi_awaddr(ifu_axi_awaddr),
+	.ifu_axi_awregion(ifu_axi_awregion),
+	.ifu_axi_awlen(ifu_axi_awlen),
+	.ifu_axi_awsize(ifu_axi_awsize),
+	.ifu_axi_awburst(ifu_axi_awburst),
+	.ifu_axi_awlock(ifu_axi_awlock),
+	.ifu_axi_awcache(ifu_axi_awcache),
+	.ifu_axi_awprot(ifu_axi_awprot),
+	.ifu_axi_awqos(ifu_axi_awqos),
+
+	.ifu_axi_wvalid(ifu_axi_wvalid),
+	.ifu_axi_wready(ifu_axi_wready),
+	.ifu_axi_wdata(ifu_axi_wdata),
+	.ifu_axi_wstrb(ifu_axi_wstrb),
+	.ifu_axi_wlast(ifu_axi_wlast),
+
+	.ifu_axi_bvalid(ifu_axi_bvalid),
+	.ifu_axi_bready(ifu_axi_bready),
+	.ifu_axi_bresp(ifu_axi_bresp),
+	.ifu_axi_bid(ifu_axi_bid),
+
+
+	.ifu_axi_arvalid(ifu_axi_arvalid),
+	.ifu_axi_arready(ifu_axi_arready),
+	.ifu_axi_arid(ifu_axi_arid),
+	.ifu_axi_araddr(ifu_axi_araddr),
+	.ifu_axi_arregion(ifu_axi_arregion),
+	.ifu_axi_arlen(ifu_axi_arlen),
+	.ifu_axi_arsize(ifu_axi_arsize),
+	.ifu_axi_arburst(ifu_axi_arburst),
+	.ifu_axi_arlock(ifu_axi_arlock),
+	.ifu_axi_arcache(ifu_axi_arcache),
+	.ifu_axi_arprot(ifu_axi_arprot),
+	.ifu_axi_arqos(ifu_axi_arqos),
+
+	.ifu_axi_rvalid(ifu_axi_rvalid),
+	.ifu_axi_rready(ifu_axi_rready),
+	.ifu_axi_rid(ifu_axi_rid),
+	.ifu_axi_rdata(ifu_axi_rdata),
+	.ifu_axi_rresp(ifu_axi_rresp),
+	.ifu_axi_rlast(ifu_axi_rlast),
+
+
+	//SB
+	.sb_axi_awvalid(sb_axi_awvalid),
+	.sb_axi_awready(sb_axi_awready),
+	.sb_axi_awid(sb_axi_awid),
+	.sb_axi_awaddr(sb_axi_awaddr),
+	.sb_axi_awregion(sb_axi_awregion),
+	.sb_axi_awlen(sb_axi_awlen),
+	.sb_axi_awsize(sb_axi_awsize),
+	.sb_axi_awburst(sb_axi_awburst),
+	.sb_axi_awlock(sb_axi_awlock),
+	.sb_axi_awcache(sb_axi_awcache),
+	.sb_axi_awprot(sb_axi_awprot),
+	.sb_axi_awqos(sb_axi_awqos),
+
+	.sb_axi_wvalid(sb_axi_wvalid),
+	.sb_axi_wready(sb_axi_wready),
+	.sb_axi_wdata(sb_axi_wdata),
+	.sb_axi_wstrb(sb_axi_wstrb),
+	.sb_axi_wlast(sb_axi_wlast),
+
+	.sb_axi_bvalid(sb_axi_bvalid),
+	.sb_axi_bready(sb_axi_bready),
+	.sb_axi_bresp(sb_axi_bresp),
+	.sb_axi_bid(sb_axi_bid),
+
+
+	.sb_axi_arvalid(sb_axi_arvalid),
+	.sb_axi_arready(sb_axi_arready),
+	.sb_axi_arid(sb_axi_arid),
+	.sb_axi_araddr(sb_axi_araddr),
+	.sb_axi_arregion(sb_axi_arregion),
+	.sb_axi_arlen(sb_axi_arlen),
+	.sb_axi_arsize(sb_axi_arsize),
+	.sb_axi_arburst(sb_axi_arburst),
+	.sb_axi_arlock(sb_axi_arlock),
+	.sb_axi_arcache(sb_axi_arcache),
+	.sb_axi_arprot(sb_axi_arprot),
+	.sb_axi_arqos(sb_axi_arqos),
+
+	.sb_axi_rvalid(sb_axi_rvalid),
+	.sb_axi_rready(sb_axi_rready),
+	.sb_axi_rid(sb_axi_rid),
+	.sb_axi_rdata(sb_axi_rdata),
+	.sb_axi_rresp(sb_axi_rresp),
+	.sb_axi_rlast(sb_axi_rlast),
+
+
+	//DMA
+	.dma_axi_awvalid(dma_axi_awvalid),
+	.dma_axi_awready(dma_axi_awready),
+	.dma_axi_awid(dma_axi_awid),
+	.dma_axi_awaddr(dma_axi_awaddr),
+	.dma_axi_awsize(dma_axi_awsize),
+	.dma_axi_awprot(dma_axi_awprot),
+	.dma_axi_awlen(dma_axi_awlen),
+	.dma_axi_awburst(dma_axi_awburst),
+
+	.dma_axi_wvalid(dma_axi_wvalid),
+	.dma_axi_wready(dma_axi_wready),
+	.dma_axi_wdata(dma_axi_wdata),
+	.dma_axi_wstrb(dma_axi_wstrb),
+	.dma_axi_wlast(dma_axi_wlast),
+
+	.dma_axi_bvalid(dma_axi_bvalid),
+	.dma_axi_bready(dma_axi_bready),
+	.dma_axi_bresp(dma_axi_bresp),
+	.dma_axi_bid(dma_axi_bid),
+
+	.dma_axi_arvalid(dma_axi_arvalid),
+	.dma_axi_arready(dma_axi_arready),
+	.dma_axi_arid(dma_axi_arid),
+	.dma_axi_araddr(dma_axi_araddr),
+	.dma_axi_arsize(dma_axi_arsize),
+	.dma_axi_arprot(dma_axi_arprot),
+	.dma_axi_arlen(dma_axi_arlen),
+	.dma_axi_arburst(dma_axi_arburst),
+
+	.dma_axi_rvalid(dma_axi_rvalid),
+	.dma_axi_rready(dma_axi_rready),
+	.dma_axi_rid(dma_axi_rid),
+	.dma_axi_rdata(dma_axi_rdata),
+	.dma_axi_rresp(dma_axi_rresp),
+	.dma_axi_rlast(dma_axi_rlast),
+`endif
+`ifdef RV_BUILD_AHB_LITE
+`endif
+
+	// clk ratio signals
+	.lsu_bus_clk_en(lsu_bus_clk_en), // Clock ratio b/w cpu core clk & AHB master interface
+	.ifu_bus_clk_en(ifu_bus_clk_en), // Clock ratio b/w cpu core clk & AHB master interface
+	.dbg_bus_clk_en(dbg_bus_clk_en), // Clock ratio b/w cpu core clk & AHB master interface
+	.dma_bus_clk_en(dma_bus_clk_en), // Clock ratio b/w cpu core clk & AHB slave interface
+
+	.timer_int(timer_int),
+	.extintsrc_req(extintsrc_req),
+
+	.dec_tlu_perfcnt0(dec_tlu_perfcnt0), // toggles when slot0 perf counter 0 has an event inc
+	.dec_tlu_perfcnt1(dec_tlu_perfcnt1),
+	.dec_tlu_perfcnt2(dec_tlu_perfcnt2),
+	.dec_tlu_perfcnt3(dec_tlu_perfcnt3),
+
+	// ports added by the soc team
+`ifdef USE_JTAG
+	.jtag_tck(jtag_tck), // JTAG clk
+	.jtag_tms(jtag_tms), // JTAG TMS
+	.jtag_tdi(jtag_tdi), // JTAG tdi
+	.jtag_trst_n(jtag_trst_n), // JTAG Reset
+	.jtag_tdo(jtag_tdo), // JTAG TDO
+`else
+	.dmi_reg_en(dmi_reg_en),
+	.dmi_reg_addr(dmi_reg_addr),
+	.dmi_reg_wr_en(dmi_reg_wr_en),
+	.dmi_reg_wdata(dmi_reg_wdata),
+	.dmi_reg_rdata(dmi_reg_rdata),
+	.dmi_hard_reset(0),
+`endif
+
+	// MPC interface, not used
+	.mpc_debug_halt_req(0), // Async halt request
+	.mpc_debug_run_req(0), // Async run request
+	.mpc_reset_run_req(1), // Run/halt after reset
+	.mpc_debug_halt_ack(),
+	.mpc_debug_run_ack(),
+	.debug_brkpt_status(),
+
+	.i_cpu_halt_req(i_cpu_halt_req), // Async halt req to CPU
+	.o_cpu_halt_ack(o_cpu_halt_ack), // core response to halt
+	.o_cpu_halt_status(o_cpu_halt_status), // 1'b1 indicates core is halted
+	.o_debug_mode_status(o_debug_mode_status), // Core to the PMU that core is in debug mode. When core is in debug mode, the PMU should refrain from sendng a halt or run request
+	.i_cpu_run_req(i_cpu_run_req), // Async restart req to CPU
+	.o_cpu_run_ack(o_cpu_run_ack), // Core response to run req
+	.scan_mode(scan_mode), // To enable scan mode
+	.mbist_mode(mbist_mode) // To enable mbist, unused inside wrapper
+);
+
+endmodule
