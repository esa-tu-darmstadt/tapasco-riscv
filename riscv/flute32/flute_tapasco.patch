diff --git a/src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv b/src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv
index 4e9f446..01f05a9 100644
--- a/src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv
+++ b/src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv
@@ -433,7 +433,7 @@ module mkMMU_Cache  #(parameter Bool dmem_not_imem)  (MMU_Cache_IFC);
 
    // Overall state of this module
    Reg #(Module_State)  rg_state      <- mkReg (MODULE_PRERESET);
-   Reg #(Bool)          rg_ddr4_ready <- mkReg (False);
+   Reg #(Bool)          rg_ddr4_ready <- mkReg (True);
    Reg #(Bool)          rg_wr_rsp_err <- mkReg (False);
 
    // SoC_Map is needed for method 'm_is_mem_addr' to distinguish mem
diff --git a/src_Testbench/SoC/SoC_Map.bsv b/src_Testbench/SoC/SoC_Map.bsv
index 5976904..f7ccb84 100644
--- a/src_Testbench/SoC/SoC_Map.bsv
+++ b/src_Testbench/SoC/SoC_Map.bsv
@@ -110,8 +110,8 @@ module mkSoC_Map (SoC_Map_IFC);
    // ----------------------------------------------------------------
    // Near_Mem_IO (including CLINT, the core-local interruptor)
 
-   Fabric_Addr near_mem_io_addr_base = 'h_0200_0000;
-   Fabric_Addr near_mem_io_addr_size = 'h_0000_C000;    // 48K
+   Fabric_Addr near_mem_io_addr_base = 'h_0001_0000;
+   Fabric_Addr near_mem_io_addr_size = 'h_0000_0000;    // 0
    Fabric_Addr near_mem_io_addr_lim  = near_mem_io_addr_base + near_mem_io_addr_size;
 
    function Bool fn_is_near_mem_io_addr (Fabric_Addr addr);
@@ -122,7 +122,7 @@ module mkSoC_Map (SoC_Map_IFC);
    // PLIC
 
    Fabric_Addr plic_addr_base = 'h_0C00_0000;
-   Fabric_Addr plic_addr_size = 'h_0040_0000;    // 4M
+   Fabric_Addr plic_addr_size = 'h_0000_0000;    // 0
    Fabric_Addr plic_addr_lim  = plic_addr_base + plic_addr_size;
 
    function Bool fn_is_plic_addr (Fabric_Addr addr);
@@ -132,8 +132,8 @@ module mkSoC_Map (SoC_Map_IFC);
    // ----------------------------------------------------------------
    // UART 0
 
-   Fabric_Addr uart0_addr_base = 'hC000_0000;
-   Fabric_Addr uart0_addr_size = 'h0000_0080;    // 128
+   Fabric_Addr uart0_addr_base = 'h0010_0000;
+   Fabric_Addr uart0_addr_size = 'h7FF0_0080;    // 2G
    Fabric_Addr uart0_addr_lim  = uart0_addr_base + uart0_addr_size;
 
    function Bool fn_is_uart0_addr (Fabric_Addr addr);
@@ -156,23 +156,23 @@ module mkSoC_Map (SoC_Map_IFC);
    // ----------------------------------------------------------------
    // Boot ROM
 
-   Fabric_Addr boot_rom_addr_base = 'h_0000_1000;
-   Fabric_Addr boot_rom_addr_size = 'h_0000_1000;    // 4K
+   Fabric_Addr boot_rom_addr_base = 'h_0000_0000;
+   Fabric_Addr boot_rom_addr_size = 'h_0000_8000;    // 4K
    Fabric_Addr boot_rom_addr_lim  = boot_rom_addr_base + boot_rom_addr_size;
 
    function Bool fn_is_boot_rom_addr (Fabric_Addr addr);
-      return ((boot_rom_addr_base <= addr) && (addr < boot_rom_addr_lim));
+      return False;
    endfunction
 
    // ----------------------------------------------------------------
    // Main Mem Controller 0
 
    Fabric_Addr mem0_controller_addr_base = 'h_8000_0000;
-   Fabric_Addr mem0_controller_addr_size = 'h_1000_0000;    // 256 MB
+   Fabric_Addr mem0_controller_addr_size = 'h_8000_0000;    // 2G
    Fabric_Addr mem0_controller_addr_lim  = mem0_controller_addr_base + mem0_controller_addr_size;
 
    function Bool fn_is_mem0_controller_addr (Fabric_Addr addr);
-      return ((mem0_controller_addr_base <= addr) && (addr < mem0_controller_addr_lim));
+      return False;
    endfunction
 
    // ----------------------------------------------------------------
@@ -194,7 +194,7 @@ module mkSoC_Map (SoC_Map_IFC);
    Fabric_Addr tcm_addr_lim  = tcm_addr_base + tcm_addr_size;
 
    function Bool fn_is_tcm_addr (Fabric_Addr addr);
-      return ((tcm_addr_base <= addr) && (addr < tcm_addr_lim));
+      return False;
    endfunction
 
    // ----------------------------------------------------------------
@@ -203,10 +203,7 @@ module mkSoC_Map (SoC_Map_IFC);
    // (Caches need this information to cache these addresses.)
 
    function Bool fn_is_mem_addr (Fabric_Addr addr);
-      return (   fn_is_boot_rom_addr (addr)
-	      || fn_is_mem0_controller_addr (addr)
-	      || fn_is_tcm_addr (addr)
-	      );
+      return False;
    endfunction
 
    // ----------------------------------------------------------------
@@ -215,13 +212,7 @@ module mkSoC_Map (SoC_Map_IFC);
    // (Caches need this information to avoid cacheing these addresses.)
 
    function Bool fn_is_IO_addr (Fabric_Addr addr);
-      return (   fn_is_near_mem_io_addr (addr)
-	      || fn_is_plic_addr (addr)
-	      || fn_is_uart0_addr  (addr)
-`ifdef INCLUDE_ACCEL0
-	      || fn_is_accel0_addr  (addr)
-`endif
-	      );
+      return True;
    endfunction
 
    // ----------------------------------------------------------------
